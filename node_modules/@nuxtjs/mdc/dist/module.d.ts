import * as _nuxt_schema from '@nuxt/schema';
import { BuiltinTheme } from 'shikiji';

type Theme = BuiltinTheme | Record<string, BuiltinTheme>;

interface UnistPlugin {
    src?: string;
    options?: Record<string, any>;
}
interface ModuleOptions {
    remarkPlugins?: Record<string, UnistPlugin>;
    rehypePlugins?: Record<string, UnistPlugin>;
    highlight?: {
        highlighter?: string;
        /**
         * Default theme that will be used for highlighting code blocks.
         */
        theme?: Theme;
        /**
         * Preloaded languages that will be available for highlighting code blocks.
         */
        preload?: string[];
        /**
         * Inject background color to code block wrapper
         *
         * @default false
         */
        wrapperStyle?: boolean | string;
    } | false;
    headings?: {
        anchorLinks?: {
            [heading in 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6']?: boolean;
        };
    };
    components?: {
        prose?: boolean;
        map?: Record<string, string>;
    };
}

declare const _default: _nuxt_schema.NuxtModule<ModuleOptions>;

declare module '@nuxt/schema' {
    interface RuntimeConfig {
        mdc: {
            highlight: {
                theme?: Theme;
                preload?: string[];
                wrapperStyle?: boolean | string;
            };
        };
    }
    interface PublicRuntimeConfig {
        mdc: {
            components: {
                prose: boolean;
                map: Record<string, string>;
            };
            headings: ModuleOptions['headings'];
        };
    }
    interface ConfigSchema {
        runtimeConfig: {
            public?: {
                mdc: {
                    components: {
                        prose: boolean;
                        map: Record<string, string>;
                    };
                };
                headings: ModuleOptions['headings'];
            };
        };
    }
}

export { _default as default };
